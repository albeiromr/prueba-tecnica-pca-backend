// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240316142745_addDatabaseTables")]
    partial class addDatabaseTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.AirLines.Airline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("FlightsCount")
                        .HasColumnType("integer")
                        .HasColumnName("flightsCount");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pK_airlines");

                    b.ToTable("airlines", (string)null);
                });

            modelBuilder.Entity("Domain.Cities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CityName")
                        .HasColumnType("text")
                        .HasColumnName("cityName");

                    b.HasKey("Id")
                        .HasName("pK_cities");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("Domain.Flights.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AirLineName")
                        .HasColumnType("text")
                        .HasColumnName("airLineName");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("arrivalDate");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("departureDate");

                    b.Property<string>("Destination")
                        .HasColumnType("text")
                        .HasColumnName("destination");

                    b.Property<string>("FlightCode")
                        .HasColumnType("text")
                        .HasColumnName("flightCode");

                    b.Property<decimal>("FlightPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("flightPrice");

                    b.Property<string>("Origin")
                        .HasColumnType("text")
                        .HasColumnName("origin");

                    b.HasKey("Id")
                        .HasName("pK_flights");

                    b.ToTable("flights", (string)null);
                });

            modelBuilder.Entity("Domain.Reservations.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AirLineName")
                        .HasColumnType("text")
                        .HasColumnName("airLineName");

                    b.Property<string>("ClientEmail")
                        .HasColumnType("text")
                        .HasColumnName("clientEmail");

                    b.Property<string>("ClientLastName")
                        .HasColumnType("text")
                        .HasColumnName("clientLastName");

                    b.Property<string>("ClientName")
                        .HasColumnType("text")
                        .HasColumnName("clientName");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("departureDate");

                    b.Property<string>("Destination")
                        .HasColumnType("text")
                        .HasColumnName("destination");

                    b.Property<string>("FlightCode")
                        .HasColumnType("text")
                        .HasColumnName("flightCode");

                    b.Property<string>("Origin")
                        .HasColumnType("text")
                        .HasColumnName("origin");

                    b.Property<string>("PlaneSeat")
                        .HasColumnType("text")
                        .HasColumnName("planeSeat");

                    b.HasKey("Id")
                        .HasName("pK_reservations");

                    b.ToTable("reservations", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
